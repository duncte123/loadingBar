/*
 *    Copyright 2018 - 2019 Duncan "duncte123" Sterken
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// if no build is wanted commit this
// [ci skip] message

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'com.jfrog.bintray' version '1.8.4'
}

group = 'me.duncte123'
archivesBaseName = 'loadingbar'
version = "1.4.0_${getBuildNumber()}"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

javadoc {
    failOnError = false
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.author()
    options.encoding = 'UTF-8'
    options.addStringOption('-html5')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

bintray {
    user = 'duncte123'
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = 'loadingbar'
        licenses = ['Apache-2.0']
        publications = ['BintrayUpload']
        vcsUrl = 'https://github.com/duncte123/loadingBar.git'
        publish = true
        version {
            name = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        BintrayUpload(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            artifact javadocJar
            artifact sourcesJar
        }
    }
}


build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn publish

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
    publish.mustRunAfter sourcesJar
}

deploy {
    dependsOn build

    onlyIf {
        System.getenv('JFROG_USERNAME') != null & System.getenv('JFROG_TOKEN') != null
    }
}

def getBuildNumber() {
    return System.getenv('GITHUB_RUN_NUMBER') ?: 'dev'
}
